events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 8000;
        server_name localhost;

        # Keycloak reverse proxy
        location /keycloak {
            proxy_pass http://keycloak:8080/keycloak;
            proxy_redirect off;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port  $server_port;
        }

        # OAuth2 Proxy callbacks
        location /oauth2/ {
            proxy_pass http://oauth2-proxy:4180;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Protected WebApp - proxy to OAuth2 Proxy
        location /webapp {
            proxy_pass http://oauth2-proxy:4180;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Internal webapp content (accessed by OAuth2 Proxy)
        location /webapp-internal {
            alias /usr/share/nginx/html/webapp;
            index index.html;
            try_files $uri $uri/ /webapp-internal/index.html;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        # Root redirect to webapp
        location = / {
            return 302 /webapp/;
        }
    }
}
