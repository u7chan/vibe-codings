events {
    worker_connections 1024;
}

http {
    upstream oauth2-proxy {
        server oauth2-proxy:4180;
    }

    upstream sample-app {
        server sample-app:3000;
    }

    upstream keycloak {
        server keycloak:8080;
    }

    server {
        listen 8000;
        server_name localhost;

        # Special handling for logout to prevent infinite redirects
        location = /oauth2/sign_out {
            # Clear the OAuth2 Proxy cookie
            add_header Set-Cookie "_oauth2_proxy=; Path=/; Domain=localhost; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax";
            # Redirect to home page
            return 302 /;
        }

        # OAuth2 Proxy auth endpoint
        location /oauth2/ {
            proxy_pass http://oauth2-proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        # Auth subrequest
        location = /oauth2/auth {
            proxy_pass http://oauth2-proxy;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
        }

        # OAuth2 Proxy entry point (moved to /app)
        location /app {
            proxy_pass http://oauth2-proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        # Keycloak admin console (optional, for development)
        location /auth/ {
            proxy_pass http://keycloak/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Protected application (now at root) - must be last to catch all other paths
        location / {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            # Pass information to backend
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request_set $groups $upstream_http_x_auth_request_groups;
            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;
            proxy_set_header X-Groups $groups;

            proxy_pass http://sample-app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
